asect 0x00

### Главная функция этой программы, которая обрабатывет данные о том, какой ход
### совершил игрок, и которая посылает в игру (в Logisim часть, в главную игровую
### схему сообщения о текущем этапе игры). В начале мы посылаем сообщение в игру
### для специального регистра, отвечающего за хранение номера лунки из которой 
### ходит пользователь, о том, что нужно очистить данные, которые могли случайно в него
### попасть по ходу игры (это связано с тем как прожимаются кнопки в Logisim).
### Затем вызываем вспомогательную функцию, которая в r1 сохраняет номер лунки
### из которой был сделан ход. Также нам нужна проверить сколько камней лежит в этой
### лунке. Ход из лунки в которой нет камней - ошибочный, если такой ход был сделан
### функция оставляет сообщение в игре об Ошибке и вновь вызывает вспомог. функцию.
### Когда игрок наконец делает корректный ход, номер лунки данного хода сохраняется по
### спец. адресу. Функиця останавливается и идёт переключение на другой банк памяти
### (т.е. на другую программу)
MAIN:
	ldi r0, 0x15         #ячейка хранит номер лунки из которой сходил User
	ldi r2, 0x12         #ячейка для спец сообщений
	ldi r3, 0b00000010   #сообщаем, что нужно обнулить регистр, хран. номер лунки хода
	st r2, r3
	while 
		jsr INPUT_REGISTER   #вызываем функцию ожидания хода User-a
		ld r1, r3          
		tst r3               #проверяем сколько камней лежит в лунки из которой сходили
	stays z                  #если в луке нет камней
		ldi r3, 0b00001001   #сообщение об неправильном ходе и об ожидании правильного
		st r2, r3
	wend
	st r0, r1                #цикл завершен <-> User сделал правильный ход
br BANK_SWITCH


### Это вспомогательная функция, предназначенная для реагирования на ход игрока.
### В начале своей работы она оставляет сообщение в игре о 
### том, что ожидает ход от пользователя. Далее она запускает цикл, работающий
### пока пользователь в игре не нажмет на кнопку (т.е. пока не будет сделан ход).
### По завершении цикла, функция оставит сообщение в игре для специального регистра,
### о том что данные нужно очистить. Затем функция прекращает посылать
### сообщения в игру и заканчивает свою работу.
INPUT_REGISTER:
	ldi r3, 0b00001000  #сообщение об ожидании хода User-a
	st r2, r3

	do 	
		ld r0, r1      #проверяем был ли совершен ход
		tst r1
	until gt           
	                   #цикл заверешен <-> ход был сделан
	ldi r3, 0x02       #сообщаем, что нужно обнулить регистр, хран. номер лунки хода
	st r2, r3
	ldi r3, 0x00       #перестаем посылать сообщения
	st r2, r3
rts

	
### Инструкция [asect] используется для указания того, с какого места в памяти ROM
### должны быть сохранены инструкции нижеследующего хода. Мы сохраняем инструкции 
### функции по переключению с одного банка памяти на другой в самом конце памяти, 
### чтобы в Logisim-части происходило безопасное переключение с одного банка памяти 
### на другой. (*Это связано с тем как работает Cdm-8 в Logisim)
asect 0xFA
BANK_SWITCH:          #переключаемся на банк памяти номер 3 - Move Maker
	ldi r0, 0x11      
	ldi r1, 0x03
	st r0, r1
end